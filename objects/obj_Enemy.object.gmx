<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Enemy_Walk_Left</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Obstacle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// OnCreate
isAlive = true;
isAttack = false;
attackAnim = false;
enemySpeed = random_range(1,4);
image_speed = (enemySpeed /100)*2 + 0.1;

if(x &lt; obj_Target.x){
    sprite_index = spr_Enemy_Walk_Right;
} else {
    sprite_index = spr_Enemy_Walk_Left;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AdditionAnimationAttack
obj_Target.targetHP -= 1;
obj_Target.combo = 0;
instance_create(x,y, obj_Damage_Screen);
instance_create(x,y, obj_Shake_Screen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Attack

if(isAlive &amp;&amp; obj_Target.isAlive) {
    isAttack = false;
    alarm[2] = 15;
    if(x &lt; obj_Target.x){
    sprite_index = spr_Enemy_Attack_Right;
    } else {
    sprite_index = spr_Enemy_Attack_Left;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dead
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// OnClick

if(mouse_check_button_pressed(mb_left) &amp;&amp; isAlive &amp;&amp; obj_Target.isAlive) {
        global.clickx = mouse_x;
        global.clicky = mouse_y;
    if (point_in_rectangle(mouse_x, mouse_y, x-5, y-5, x + 32+5, y + 32+5))
        {
            score += 1 + obj_Target.combo;
            isAlive = false;
            obj_Target.combo +=1; //gain combo point
            obj_GUI.alarm[2] = 1;
            //play splash sound
            if(random_range(true, false)){
            audio_play_sound(s_splash2,1,false);
            } else
            {
            audio_play_sound(s_splash1,1,false);
            }
            if(x &lt; obj_Target.x){
                sprite_index = spr_Enemy_Dead_Right;
            } else {
                sprite_index = spr_Enemy_Dead_Left;
            }
            alarm[0] = 20;
            instance_create(x,y,obj_Shake_Screen);
        }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement
if(isAlive) {
    mp_potential_step_object(obj_Target.x, obj_Target.y, enemySpeed, obj_Obstacle);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Target">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CheckAttack

if(!isAttack &amp;&amp; obj_Target.isAlive) {
    alarm[1] = 50;
    isAttack = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_Enemy_Attack_Left || sprite_index == spr_Enemy_Attack_Right) {
if(x &lt; obj_Target.x){
    sprite_index = spr_Enemy_Walk_Right;
} else {
    sprite_index = spr_Enemy_Walk_Left;
}
}

//check direction
if(isAlive) {
    if(sprite_index == spr_Enemy_Walk_Left || sprite_index == spr_Enemy_Walk_Right) {
        if(x &lt; obj_Target.x){
            sprite_index = spr_Enemy_Walk_Right;
        } else {
            sprite_index = spr_Enemy_Walk_Left;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
