<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OnCreate
displayGUI = true;
blink = false;
alpha = 1;
offset = 0;
runs = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ads

runs += 1;
//ca-app-pub-4533074668069226/2610128399
//GoogleMobileAds_AddBannerAt(bannerid, GoogleMobileAds_Full_Banner,0,0);
//ads_enable(0,0,0);
show_debug_message(runs);

if(runs == 2) {
show_debug_message("ads");
GoogleMobileAds_ShowInterstitial();
runs = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ResetComboTextOffset
offset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SetComboTextOffset
offset = 0.3;
alarm[3] = 3 // set reset alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BlinkOn
alpha = 1;
alarm[0] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BlinkOff
alpha = 0;
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DrawGameHUD
if(displayGUI){
    draw_set_colour(c_white);
    draw_set_font(PixelFontScore);
    //draw start at beggining
    if(!obj_Enemy_Handler.isSpawn){
        draw_set_halign(fa_center);
        draw_text(display_get_gui_width()/2, display_get_gui_height()/2,"SMASH!");
    }
    draw_set_halign(fa_left);
    display_set_gui_size(800,480);
    // draw score
    draw_text_transformed(15,15,score,1,1,0);
    //loop for draw hp
    for(i=0;i&lt;obj_Target.targetHP;i+=1){
        draw_sprite(spr_Heart,0,display_get_gui_width()-50 -(i*50),display_get_gui_height()-50);
    }
    //draw combo
    draw_set_halign(fa_center);
    if(obj_Target.combo &lt; 15) {
            draw_set_colour(c_white);
            draw_set_font(PixelFontComboSmall);
    }
    if(obj_Target.combo &gt; 15 &amp;&amp; obj_Target.combo &lt; 50) {
            draw_set_colour(c_white);
            draw_set_font(PixelFontScore);
    }
    if(obj_Target.combo &gt;= 50)
    {
            draw_set_colour(c_red);
            draw_set_font(PixelFontComboBig);
    }
    if(obj_Target.combo &gt; 0) {
    draw_text_transformed(display_get_gui_width()/2,display_get_gui_height()-100,"+"+string(obj_Target.combo),1+offset,1+offset,0);
    }
}

//DrawEndGameHUD
if(!displayGUI) {
    draw_set_colour(c_white);
    draw_set_font(PixelFontScore);
    draw_set_halign(fa_center);
    draw_text(display_get_gui_width()/2 , 20,"SCORE");
    draw_text(display_get_gui_width()/2 , 100,score);
    draw_set_font(PixelFontComboSmall);
    draw_text(display_get_gui_width()/2, display_get_gui_height()-180,"highscore: "+string(global.highscore));
    draw_set_font(PixelFontScore);
    draw_set_alpha(alpha);
    draw_text(display_get_gui_width()/2, display_get_gui_height()-100,"tap to restart!");
    draw_set_alpha(1); 
}
      
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
